#기본막대차트
count <- c(1,2,3,4,5)
barplot(count)
num1 <- 100
num2 <- 20
result <- num1+num2
result
result <- num1 - num2
result
result <- num1*num2
result
result <- num1/num2
result
result <- num1%%num2
result
result <- num1^2
result
result <- num1^2 #제곱계산
result
result <- num1 ^num2
result
boolean <- num1 == num2 #두 변수의 값이 같은지 비교
boolean
boolean <- num1 != num2
boolean
boolean <- num1 < num2
boolean
boolean <- num1 <= num2
boolean
logical <- num1 >=50 & num2 <=10
logical
logical <- num1 >=50 | num2 <=10 #두 관계식 중 하나라도 같은지 판단
logical
logical <- !(num1 >= 50)
logical
x <- TRUE; y <- FALSE
xor(x,y)
x <- 50; y <- 4; z <- x*y
if(x*y >= 40){
cat("x*y의 결과는 40 이상입니다.\n")
cat("x*y=z")
}else{
cat("x*y의 결과는 40미만입니다. x*y =",z,"\n")
}
x <- 50; y <- 4; z <- x*y
if(x*y >= 40){
cat("x*y의 결과는 40 이상입니다.\n")
cat("x*y=",z)
}else{
cat("x*y의 결과는 40미만입니다. x*y =",z,"\n")
}
#교재 p110 실습 - if() 사용으로 입력된 점수의 학점 구하기
score <- scan() #점수입력받기
Read 1 item
#교재 p110 실습 - if() 사용으로 입력된 점수의 학점 구하기
score <- scan()#점수입력받기
score
result <-"노력"
if(score >=80){
result <- "우수"
}
cat("당신의 학점은",result,score)
#교재 p111 실습 - if ~ else if 형식으로 학점 구하기
score <- scan()
score <- scan()
}else if(score>=80){
result = "B학점"
}else if(score>=70){
result = "C학점"
}else if(score>=60){
result = "D학점"
}else{
result = "F학점"
}
cat("당신의 학점은",result) #문자열과 변수의 값을 함께 출력
print(result)
source("C:/Users/bigdata/Desktop/workspace/R/Ch04/4_2_조건문.R", encoding = 'UTF-8', echo=TRUE)
score <- scan()
if(score>=90){
result = "A학점"
}else if(score>=80){
result = "B학점"
}else if(score>=70){
result = "C학점"
}else if(score>=60){
result = "D학점"
}else{
result = "F학점"
}
cat("당신의 학점은",result) #문자열과 변수의 값을 함께 출력
print(result)
#교재 p112 실습 - ifelse() 사용하기
score <- scan()
ifelse(score>=80,"우수","노력")
ifelse(score<=80,"우수","노력")
excel <- read.csv("../file/exam.csv", header=T)
q1 <- excel$ql
ql
i <- c(1:10)
for(n in i){
print(n*10)
print(n)
}
i <- c(1:10)
for(n in i){
if(n%%2==0)print(n) #짝수만 입력
}
i <- c(1:10)
for (n in i){
if(n%%2==0){
next #다음문장으로 skip 반복문 계속
}else{
print(n) #홀수일때만 출력
}
}
name <- c(names(exam))
for (n in name){
print(n)
}
exam <- read.table(exam)
exam <- read.table(exam)
exam
score <- c(85,95,98)
name <- c("홍길동","이순신","강감찬")
i <- 1
for(s in score){
cat(name[i], "->",s,"\n")
i <- i+1
}
i = 0
while(i<10){
i <- i+1
print(i)
}
f1 <- function(){
cat("매개변수가 없는 함수")
}
f1()
f3 <- function(x,y){
add <- x+y
return(add)
}
add <- f3(10,20)
add
setwdd("../file/test.csv")
test <- read.csv("test.csv", header=TRUE)
head(test)
test <- read.csv("../file/test.csv", header=TRUE)
head(test)
summary(test) #변수(A,B,C,D,E)별 요약통계량
table(test$A)
summary(test) #변수(A,B,C,D,E)별 요약통계량
#(3)특정변수의 빈도수 구하기
table(test$A)
#(4)각 칼럼 단위의 빈도수와 최대값, 최소값 계산을 위한 사용자 함수 정의
data_pro <- function(x){
for(idx in 1:length(x)){ #칼럼수 만큼 반복
cat(idx, "번째 칼럼의 빈도 분석결과")
print(table(x[idx])) #칼럼별 빈도수 출력
cat("\n")
}
for (idx in 1:length(x)){
f <-table(x[idx])
cat(idx,"번째 칼럼의 최대값/최소값\n")
}
}
data_pro(test)
summary(test) #변수(A,B,C,D,E)별 요약통계량
#(3)특정변수의 빈도수 구하기
table(test$A)
#(4)각 칼럼 단위의 빈도수와 최대값, 최소값 계산을 위한 사용자 함수 정의
data_pro <- function(x){
for(idx in 1:length(x)){ #칼럼수 만큼 반복
cat(idx, "번째 칼럼의 빈도 분석결과")
print(table(x[idx])) #칼럼별 빈도수 출력
cat("\n")
}
for (idx in 1:length(x)){
f <-table(x[idx])
cat(idx,"번째 칼럼의 최대값/최소값\n")
cat("max=",max(f),"min=",min(f),"\n")
}
}
data_pro(test)
x <- c(7,5,12,9,15,6)
var_sd <- function(x){
var <- sum(x - mean(x)/2)/(length(x)-1)
sd <- sqrt(var)
cat("표본분산 :",var,"\n")
cat("표본표준편차:",sd)
}
var_sd(x)
pytha <- function(s,t){
a <- s^2 - t^2
b <- 2*s*t
c <- s^2 + t^2
cat("피타고라스의 정리:3개의 변수",a,b,c)
}
pytha(2,1)
source("C:/Users/bigdata/Desktop/workspace/R/Ch05/5_1_막대차트.R", encoding = 'UTF-8', echo=TRUE)
score <- c (80,72,60,78,82)
names(score) <- c('김유신','김춘추','장보고','강감찬','이순신')
barplot(Score)
score <- c (80, 72, 60, 78, 82)
names(score) <- c('김유신','김춘추','장보고','강감찬','이순신')
barplot(Score)
barplot(score)
season <- c('winter','summer','spring','summer','summer',
'autumn','autumn','summer','spring','spring')
season
result <- table(season)
result
barplot(result,main='season')
barplot(result,main='season',col=c('blue','red','green','yellow'))
barplot(result,main='season',col=rainbow(4))
barplot(result,main='season',col=rainbow(4))
barplot(result,main='season',col=rainbow(4))
barplot(result,main='season',col=heat.colors(4))
barplot(result,main='season',col=terrain.colors(4))
barplot(result,main='season',col=heat.colors(4))
barplot(result,main='season',col=terrain.colors(4))
barplot(result,main='season',col=heat.colors(4))
barplot(result,main='season',col=terrain.colors(4))
barplot(result,
main='season',
col=rainbow(4),
xlab = '계절',
ylab = '빈도수')
barplot(result,
main='season',
col=rainbow(4),
xlab = '계절',
ylab = '빈도수',
horiz = T
barplot(result,
main='season',
col=rainbow(4),
xlab = '계절',
ylab = '빈도수',
horiz = T
barplot(result,
main='season',
col=rainbow(4),
xlab = '계절',
ylab = '빈도수',
horiz = T)
#누적막대그래프
df_sample <- read.csv('../file/sample_population.csv')
df_sample
barplot(matrix_sample)
matrix_sample <- as.matrix(df_sample)
matrix_sample
barplot(matrix_sample)
barplot(matrix_sample,
col=rainbow(3),
beside=T,
legend.text = T)
score <- c (80, 72, 60, 78, 82)
names(score) <- c('김유신','김춘추','장보고','강감찬','이순신')
dotchart(score, color = 'red', lcolor = 'blue')
season <- c('winter','summer','spring','summer','summer',
'autumn','autumn','summer','spring','spring')
season
result <- table(season)
result
pie(result, main='season')
pie(result, main='season', col = terrain.colors(4))
pie(result, main='season', col = terrain.colors(4))
dotchart(score, color = 'red', lcolor = 'blue')
cars
View(cars)
cars[,2]
dist
dist <- cars[,2]
dist
class(dist)
class(dist)
boxplot(dist)
boxplot(dist, main='자동차 제동거리')
boxplot.stats(dist)
iris
boxplot(data=iris,
Sepal.Length ~ Species)
cars
barplot(dist)
hist(dist)
barplot(dist)
hist(dist)
hist(iris$Sepal.Width,
xlim = c(2.0, 4.5),
xlab = '꽃 받침 너비',
main = '꽃받침 너비 분포도')
hist(iris$Petal.Width,
xlim = c(2.0, 4.5),
xlab = '꽃받침 너비',
main = '꽃받침 너비 분포도')
hist(iris$Petal.Width,
xlim = c(0, 4.5),
xlab = '꽃받침 너비',
main = '꽃받침 너비 분포도')
mtcars
View(mtcars)
wt <- mtcars$wt
mpg <- mtcars$mpg
plot(wt,mpg)
plot(wt,mpg, col='red',pch=19)
plot(wt,mpg, col='red', pch=2)
plot(wt,mpg, col='red', pch=5)
plot(wt,mpg, col='red', pch=6)
plot(wt,mpg, col='red', pch=7)
iris
df_iris<- iris[,3:4]
df_iris
group <- as.numeric(iris$Species)
group
color <- c('red','green','blue')
plot(df_iris, pch=16, col=color[group])
char_data <- c(305,450,320,460,330,480,380,520)
#8개의 벡터에 칼럼명 지정
names(char_data) <- c("2018 1분기","2019 1분기",
"2018 2분기","2019 2분기",
"2018 3분기","2019 3분기",
"2018 4분기","2019 4분기")
str(char_data) #자료구조보기
chart_data
chart_data <- c(305,450,320,460,330,480,380,520)
#8개의 벡터에 칼럼명 지정
names(chart_data) <- c("2018 1분기","2019 1분기",
"2018 2분기","2019 2분기",
"2018 3분기","2019 3분기",
"2018 4분기","2019 4분기")
str(chart_data) #자료구조보기
chart_data
barplot(chart_data, ylim =c(0,600),
col = rainbow(8),
main="2018년도 vs 2019년도 매출현황 비교")
help("barplot")
barplot(chart_data,ylim = c(0,600),
ylab = "매출액(단위:만원)",
xlab = "년도별 분기 현황",
col=rainbow(8),
main = "2018년도 vs 2019년도 매출현황 비교")
barplot(chart_data, xlim = c(0,600), horiz = T,
ylab = ylab = "매출액(단위:만원)",
xlab = "년도별 분기 현황",
col=rainbow(8),
main = "2018년도 vs 2019년도 매출현황 비교")
barplot(chart_data, xlim = c(0,600), horiz = T,
ylab = ylab = "매출액(단위:만원)",
xlab = "년도별 분기 현황",
col=rainbow(8),
main = "2018년도 vs 2019년도 매출현황 비교")
barplot(chart_data, xlim = c(0,600), horiz = T,
ylab = ylab = "매출액(단위:만원)",
xlab = "년도별 분기 현황",
col=rainbow(8),
main = "2018년도 vs 2019년도 매출현황 비교")
barplot(chart_data, xlim = c(0,600), horiz = T,
ylab = ylab = "매출액(단위:만원)",
xlab = "년도별 분기 현황",
col=rainbow(8),
main = "2018년도 vs 2019년도 매출현황 비교")
barplot(chart_data, xlim = c(0,600), horiz = T,
ylab = "매출액(단위:만원)",
xlab = "년도별 분기 현황",
col=rainbow(8),
main = "2018년도 vs 2019년도 매출현황 비교")
barplot(chart_data, xlim = c(0,600), horiz = T,
ylab = "매출액(단위:만원)",
xlab = "년도별 분기 현황",
col=rainbow(8), space =1, cex.names = 0.8,
main = "2018년도 vs 2019년도 매출현황 비교")
barplot(chart_data, xlim = c(0,600), horiz = T,
ylab = "매출액(단위:만원)",
xlab = "년도별 분기 현황",
space =1, cex.names = 0.8,
main = "2018년도 vs 2019년도 매출현황 비교",
col = rep(c(2,4),4))
barplot(chart_data, xlim = c(0,600), horiz = T,
ylab = "매출액(단위:만원)",
xlab = "년도별 분기 현황",
space =1, cex.names = 0.8,
main = "2018년도 vs 2019년도 매출현황 비교",
col = rep(c("red","green"),4))
#교재 p144 실습 - 누적 막대 차트 그리기
data(VADeaths)
VADeaths
str(VADeaths)
class(VADeaths)
mode(VADeaths)
title(main = "미국 버지니아주 하위계층 사망비율", font.main = 4)
legend(3.8, 200, c("50-54","55-59","60-64","65-69","70-74"),
cex = 0.8, fill=rainbow(5))
data(VADeaths)
VADeaths
#(2)VADeaths 데이터 셋 구조보기
str(VADeaths)
class(VADeaths)
mode(VADeaths)
#(3)개별차트와 누적차트 그리기
par(mfrow = c(1,2))
#개별차트그리기
barplot(VADeaths, beside=T, col=rainbow(5),
mian ="미국 버지니아주 하위계층 사망비율")
#범례표시 :
legend(19,71, c("50-54", "55-59", "60-64", "65-69", "70-74"),
cex = 0.8, fill = rainbow(5))
#누적차트 그리기
barplot(VADeaths, beside =F, col = rainbow(5))
#제목표시
title(main = "미국 버지니아주 하위계층 사망비율", font.main = 4)
legend(3.8, 200, c("50-54","55-59","60-64","65-69","70-74"),
cex = 0.8, fill=rainbow(5))
help(dotchart)
par(mfrow=c(1,1)) #1행1열 그래프 보기
dotchart(chart_data, color = c("blue","red"),
lcolor="black", pch = 1:2,
xlab = "매출액",
main = "분기별 판매현황: 점차트 시각화",
cex=1.2)
help(pie)
par(mfrow=c(1,1))
pie(chart_data, labels = names(chart_data), col = rainbow(8), cex=1.2)
title("2018~2019년도 분기별 매출 현황 ")
barplot(VADeaths, range=0)
boxplot(VADeaths, range=0,notch=T)
abline(h=37, lty = 3, col = "red")
